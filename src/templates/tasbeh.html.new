<!-- filepath: /home/spider/Desktop/EndToEnd-Project/java-docker-jenkins/flask-app/src/templates/tasbeh.html -->
{% extends "base.html" %}

{% block title %}التسبيح الإلكتروني - Digital Tasbeh{% endblock %}

{% block styles %}
<style>
    @import url('https://fonts.googleapis.com/css2?family=Amiri:wght@400;700;900&family=Cairo:wght@300;400;600;700;900&family=Scheherazade+New:wght@400;700&display=swap');
    
    :root {
        --primary-color: #4CAF50;
        --accent-color: #27ae60;
        --button-hover: #2ecc71;
        --count-color: #f39c12;
        --reset-color: #c0392b;
        --border-radius: 15px;
        --transition-speed: 0.3s;
    }
    
    .container {
        max-width: 960px;
        margin: 2rem auto;
        padding: 0 1rem;
    }
    
    .tasbeh-header {
        text-align: center;
        margin-bottom: 2rem;
        animation: fadeIn 1s ease;
    }
    
    .tasbeh-header h1 {
        font-family: 'Scheherazade New', serif;
        font-size: 3rem;
        margin: 0;
        background-image: linear-gradient(45deg, var(--primary-color), var(--accent-color));
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        display: inline-block;
    }
    
    .tasbeh-header .subheading {
        font-size: 1.2rem;
        opacity: 0.8;
        margin-top: 0.5rem;
    }
    
    .hadith-quote {
        background: rgba(0, 0, 0, 0.1);
        border-right: 4px solid var(--primary-color);
        padding: 1rem;
        margin: 1rem 0 2rem;
        font-family: 'Amiri', serif;
        border-radius: var(--border-radius);
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .tasbeh-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }
    
    .phrase-container {
        background: rgba(255, 255, 255, 0.08);
        backdrop-filter: blur(10px);
        border-radius: var(--border-radius);
        padding: 1.5rem;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
        transition: transform var(--transition-speed), box-shadow var(--transition-speed);
        animation: slideIn 0.5s ease-out forwards;
        opacity: 0;
    }
    
    @keyframes slideIn {
        from {
            transform: translateY(30px);
            opacity: 0;
        }
        to {
            transform: translateY(0);
            opacity: 1;
        }
    }
    
    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }
    
    .phrase-container:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 25px rgba(0, 0, 0, 0.2);
    }
    
    .phrase-text {
        font-family: 'Scheherazade New', serif;
        font-size: 1.8rem;
        text-align: center;
        margin-bottom: 1.5rem;
        padding: 1rem;
        background: rgba(0, 0, 0, 0.15);
        border-radius: var(--border-radius);
        box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.1);
    }
    
    .button-area {
        text-align: center;
    }
    
    .count-display {
        font-family: 'Cairo', sans-serif;
        font-size: 3rem;
        font-weight: 700;
        color: var(--count-color);
        margin-bottom: 1rem;
        text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);
        transition: transform 0.2s;
    }
    
    .count-display.animate {
        transform: scale(1.2);
    }
    
    .counter-buttons {
        display: flex;
        gap: 1rem;
        margin-bottom: 1rem;
    }
    
    .btn {
        font-family: 'Cairo', sans-serif;
        font-weight: 600;
        border: none;
        border-radius: var(--border-radius);
        padding: 0.75rem 1.5rem;
        cursor: pointer;
        transition: all var(--transition-speed);
        display: flex;
        align-items: center;
        justify-content: center;
        flex: 1;
    }
    
    .btn i {
        margin-left: 0.5rem;
    }
    
    .increment-btn {
        background: linear-gradient(to right, var(--primary-color), var(--accent-color));
        color: white;
        box-shadow: 0 4px 15px rgba(39, 174, 96, 0.4);
    }
    
    .increment-btn:hover {
        background: var(--button-hover);
        box-shadow: 0 4px 20px rgba(39, 174, 96, 0.6);
        transform: translateY(-2px);
    }
    
    .reset-btn {
        background: rgba(192, 57, 43, 0.85);
        color: white;
        box-shadow: 0 4px 15px rgba(192, 57, 43, 0.3);
    }
    
    .reset-btn:hover {
        background: var(--reset-color);
        box-shadow: 0 4px 20px rgba(192, 57, 43, 0.5);
        transform: translateY(-2px);
    }
    
    .quick-add-section {
        display: flex;
        gap: 0.5rem;
        margin-top: 1rem;
    }
    
    .quick-add-btn {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: var(--border-radius);
        padding: 0.5rem;
        flex: 1;
        font-family: 'Cairo', sans-serif;
        font-weight: 600;
        cursor: pointer;
        transition: all var(--transition-speed);
    }
    
    .quick-add-btn:hover {
        background: rgba(255, 255, 255, 0.2);
        transform: translateY(-2px);
    }
    
    .custom-phrase-form {
        background: rgba(255, 255, 255, 0.05);
        padding: 1.5rem;
        border-radius: var(--border-radius);
        margin-top: 2rem;
        animation: fadeIn 1s ease 0.5s forwards;
        opacity: 0;
    }
    
    .form-heading {
        font-family: 'Cairo', sans-serif;
        font-size: 1.5rem;
        margin-bottom: 1rem;
        color: var(--primary-color);
    }
    
    .form-input {
        width: 100%;
        padding: 0.75rem;
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: var(--border-radius);
        color: white;
        font-family: 'Amiri', serif;
        font-size: 1.2rem;
        margin-bottom: 1rem;
    }
    
    .form-input:focus {
        outline: none;
        border-color: var(--accent-color);
    }
    
    .form-submit {
        background: linear-gradient(to right, var(--primary-color), var(--accent-color));
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: var(--border-radius);
        font-family: 'Cairo', sans-serif;
        font-weight: 600;
        cursor: pointer;
        transition: all var(--transition-speed);
    }
    
    .form-submit:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(39, 174, 96, 0.4);
    }
    
    @media (max-width: 768px) {
        .tasbeh-container {
            grid-template-columns: 1fr;
        }
        
        .tasbeh-header h1 {
            font-size: 2.5rem;
        }
    }
    
    #confettiCanvas {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: 1000;
    }
</style>
{% endblock %}

{% block content %}
<canvas id="confettiCanvas"></canvas>

<div class="tasbeh-header">
    <h1>التسبيح الإلكتروني</h1>
    <div class="subheading">سبّح وأنت تستخدم التكنولوجيا</div>
    
    <div class="hadith-quote">
        "مَنْ سَبَّحَ اللَّهَ دُبُرَ كُلِّ صَلَاةٍ ثَلَاثًا وَثَلَاثِينَ، وَحَمِدَ اللَّهَ ثَلَاثًا وَثَلَاثِينَ، وَكَبَّرَ اللَّهَ ثَلَاثًا وَثَلَاثِينَ، فَتِلْكَ تِسْعَةٌ وَتِسْعُونَ، وَقَالَ تَمَامَ الْمِائَةِ: لَا إِلَهَ إِلَّا اللَّهُ وَحْدَهُ لَا شَرِيكَ لَهُ، لَهُ الْمُلْكُ وَلَهُ الْحَمْدُ وَهُوَ عَلَى كُلِّ شَيْءٍ قَدِيرٌ، غُفِرَتْ خَطَايَاهُ وَإِنْ كَانَتْ مِثْلَ زَبَدِ الْبَحْرِ"
    </div>
</div>

<div class="tasbeh-container">
    {% for phrase_data in phrases %}
    <div class="phrase-container" style="animation-delay: {{ loop.index0 * 0.1 }}s">
        <div class="phrase-text">{{ phrase_data.phrase }}</div>
        <div class="button-area">
            <div class="count-display" id="count-{{ loop.index0 }}">
                {{ phrase_data.count }}
            </div>
            <div class="counter-buttons">
                <button class="btn increment-btn" onclick="incrementCounter('{{ phrase_data.phrase }}', {{ loop.index0 }})">
                    <i class="fas fa-plus"></i> زيادة
                </button>
                <button class="btn reset-btn" onclick="resetCounter('{{ phrase_data.phrase }}', {{ loop.index0 }})">
                    <i class="fas fa-undo"></i> صفر
                </button>
            </div>
            <div class="quick-add-section">
                <button class="quick-add-btn" onclick="addCount('{{ phrase_data.phrase }}', 10, {{ loop.index0 }})">+10</button>
                <button class="quick-add-btn" onclick="addCount('{{ phrase_data.phrase }}', 33, {{ loop.index0 }})">+33</button>
                <button class="quick-add-btn" onclick="addCount('{{ phrase_data.phrase }}', 100, {{ loop.index0 }})">+100</button>
            </div>
        </div>
    </div>
    {% endfor %}
</div>

<div class="custom-phrase-form">
    <h2 class="form-heading">أضف عبارة تسبيح خاصة</h2>
    <input type="text" class="form-input" id="custom-phrase" placeholder="أدخل عبارة التسبيح الخاصة بك...">
    <button class="form-submit" onclick="addCustomPhrase()">إضافة</button>
</div>
{% endblock %}

{% block scripts %}
<script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.5.1/dist/confetti.browser.min.js"></script>
<script>
    // Initialize confetti cannon
    const confettiCanvas = document.getElementById('confettiCanvas');
    const myConfetti = confetti.create(confettiCanvas, {
        resize: true,
        useWorker: true
    });
    
    // Function to update counter display with animation
    function updateCounterDisplay(index, count) {
        const countDisplay = document.getElementById(`count-${index}`);
        countDisplay.textContent = count;
        countDisplay.classList.add('animate');
        setTimeout(() => countDisplay.classList.remove('animate'), 300);
    }
    
    // Function to fire confetti
    function fireConfetti() {
        myConfetti({
            particleCount: 100,
            spread: 70,
            origin: { y: 0.6 },
            colors: ['#f39c12', '#e67e22', '#d35400', '#27ae60', '#2ecc71', '#16a085']
        });
    }
    
    // Increment counter and update database
    function incrementCounter(phrase, index) {
        fetch('/tasbeh/increment', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ phrase: phrase }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                updateCounterDisplay(index, data.count);
                
                // Fire confetti at milestone counts
                if (data.count % 33 === 0 || data.count % 100 === 0) {
                    fireConfetti();
                }
            }
        })
        .catch(error => console.error('Error:', error));
    }
    
    // Reset counter to zero
    function resetCounter(phrase, index) {
        if (confirm('هل أنت متأكد من إعادة ضبط العداد إلى صفر؟')) {
            fetch('/tasbeh/reset', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ phrase: phrase }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    updateCounterDisplay(index, 0);
                }
            })
            .catch(error => console.error('Error:', error));
        }
    }
    
    // Add specific count
    function addCount(phrase, amount, index) {
        fetch('/tasbeh/add_count', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ 
                phrase: phrase,
                amount: amount
            }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                updateCounterDisplay(index, data.count);
                
                // Fire confetti for larger additions
                if (amount >= 33) {
                    fireConfetti();
                }
            }
        })
        .catch(error => console.error('Error:', error));
    }
    
    // Add custom phrase
    function addCustomPhrase() {
        const customPhraseInput = document.getElementById('custom-phrase');
        const phrase = customPhraseInput.value.trim();
        
        if (phrase) {
            fetch('/tasbeh/add_phrase', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ phrase: phrase }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Reload the page to show the new phrase
                    window.location.reload();
                } else {
                    alert(data.message);
                }
            })
            .catch(error => console.error('Error:', error));
        } else {
            alert('الرجاء إدخال عبارة');
        }
    }
</script>
{% endblock %}
