apiVersion: v1
kind: Secret
metadata:
  name: islamic-app-secrets
  namespace: islamic-app
  labels:
    app: islamic-flask-app
type: Opaque
data:
  # Base64 encoded secret key - change this in production
  SECRET_KEY: eW91ci1zdXBlci1zZWNyZXQta2V5LWZvci1wcm9kdWN0aW9u  # your-super-secret-key-for-production
  # Add other sensitive data here as needed
  # DATABASE_URL: <base64-encoded-db-url>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: islamic-app-nginx-config
  namespace: islamic-app
  labels:
    app: islamic-flask-app
data:
  nginx.conf: |
    upstream flask_app {
        server islamic-app-service:5000;
    }
    
    server {
        listen 80;
        server_name _;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Static files caching
        location /static/ {
            proxy_pass http://flask_app;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Main application
        location / {
            proxy_pass http://flask_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
